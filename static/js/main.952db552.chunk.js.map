{"version":3,"sources":["Store/ThemeProvider.js","Store/VisualizationTypeProvider.js","Components/Navbar/Navbar.js","Components/box/Box.js","Components/Visualization/Visualization.js","Pages/MainUI/MainUI.js","Pages/UploadFile/UploadFile.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","props","useState","theme","setTheme","Provider","value","children","VisualizationContext","VisualizationTypeProvider","visualizationType","setVisualizationType","Navbar","color","height","useContext","className","onClick","Box","colorCode","mystyle","backgroundColor","flex","width","zIndex","style","Visualization","currentTime","setCurrentTime","useEffect","fetch","then","res","json","data","console","log","columnCount","length","columnWidth","window","innerWidth","innerHeight","rowCount","rowHeight","columnIndex","rowIndex","App","UploadFile","file","setFile","history","useHistory","type","name","onChange","e","target","files","preventDefault","formData","FormData","append","axios","post","catch","err","warn","push","path","exact","component","MainUI","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.952db552.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = (props) => {\r\n  const [theme, setTheme] = useState(\"light\");\r\n\r\n  return (\r\n    <ThemeContext.Provider value={[theme, setTheme]}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const VisualizationContext = createContext();\r\n\r\nexport const VisualizationTypeProvider = (props) => {\r\n  const [visualizationType, setVisualizationType] = useState(\"linear\");\r\n\r\n  return (\r\n    <VisualizationContext.Provider\r\n      value={[visualizationType, setVisualizationType]}\r\n    >\r\n      {props.children}\r\n    </VisualizationContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { ThemeContext } from \"../../Store/ThemeProvider\";\r\nimport { VisualizationContext } from \"../../Store/VisualizationTypeProvider\";\r\n\r\nfunction Navbar({ color, height }) {\r\n  const [theme, setTheme] = useContext(ThemeContext);\r\n  const [visualizationType, setVisualizationType] =\r\n    useContext(VisualizationContext);\r\n\r\n  return (\r\n    <nav className={\"Navbar \" + theme + \"Bar\"}>\r\n      <h1 className={\"titleText \" + theme + \"TitleText\"}>\r\n        <span className=\"bold\">Tarun Ravi's </span>Space Filling Curve\r\n      </h1>\r\n\r\n      <div className=\"buttons\">\r\n        <h1\r\n          onClick={() => setVisualizationType(\"linear\")}\r\n          className={\r\n            \"buttonText \" +\r\n            theme +\r\n            \"Text\" +\r\n            (visualizationType === \"linear\" ? \" selected\" + theme : \"\")\r\n          }\r\n        >\r\n          Linear\r\n        </h1>\r\n\r\n        <h1\r\n          onClick={() => setVisualizationType(\"hilbert\")}\r\n          className={\r\n            \"buttonText \" +\r\n            theme +\r\n            \"Text\" +\r\n            (visualizationType === \"hilbert\" ? \" selected\" + theme : \"\")\r\n          }\r\n        >\r\n          Hilbert\r\n        </h1>\r\n\r\n        <div\r\n          className=\"themeSwitch\"\r\n          className={theme + \"Switch\" + \" switch\"}\r\n          onClick={() => setTheme(theme === \"light\" ? \"dark\" : \"light\")}\r\n        >\r\n          <div className={theme + \"Circle\" + \" switchCircle\"}></div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./Box.css\";\r\nimport { ThemeContext } from \"../../Store/ThemeProvider\";\r\n\r\nfunction Box({ colorCode }) {\r\n  const [theme, setTheme] = useContext(ThemeContext);\r\n\r\n  var color = \"#000000\";\r\n  if (theme === \"light\") {\r\n    switch (colorCode) {\r\n      case \"0\":\r\n        color = \"rgb(242,242,247)\";\r\n        break;\r\n      case \"1\":\r\n        color = \"rgb(229,229,234)\";\r\n        break;\r\n      case \"2\":\r\n        color = \"rgb(219,219,219)\";\r\n        break;\r\n      case \"3\":\r\n        color = \"rgb(199,199,204)\";\r\n        break;\r\n      case \"4\":\r\n        color = \"rgb(174,174,178)\";\r\n        break;\r\n      case \"5\":\r\n        color = \"rgb(142,142,147)\";\r\n        break;\r\n    }\r\n  } else {\r\n    switch (colorCode) {\r\n      case \"0\":\r\n        color = \"rgb(142,142,147)\";\r\n        break;\r\n      case \"1\":\r\n        color = \"rgb(99,99,102)\";\r\n        break;\r\n      case \"2\":\r\n        color = \"rgb(72,72,74)\";\r\n        break;\r\n      case \"3\":\r\n        color = \"rgb(58,58,60)\";\r\n        break;\r\n      case \"4\":\r\n        color = \"rgb(44,44,46)\";\r\n        break;\r\n      case \"5\":\r\n        color = \"rgb(28,28,30)\";\r\n        break;\r\n    }\r\n  }\r\n\r\n  const mystyle = {\r\n    backgroundColor: color,\r\n    flex: 1,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    zIndex: \"1\",\r\n  };\r\n\r\n  return <div className=\"box\" style={mystyle} />;\r\n}\r\n\r\nexport default Box;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./Visualization.css\";\r\nimport Box from \"../box/Box\";\r\nimport { VisualizationContext } from \"../../Store/VisualizationTypeProvider\";\r\nimport { ThemeContext } from \"../../Store/ThemeProvider\";\r\n\r\nimport { FixedSizeGrid as Grid } from \"react-window\";\r\n\r\nfunction Visualization() {\r\n  const [visualizationType, setVisualizationType] =\r\n    useContext(VisualizationContext);\r\n  const [theme, setTheme] = useContext(ThemeContext);\r\n\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n\r\n  const [errorFetchedChecker, setErrorFetchedChecker] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [data, setData] = useState(null);\r\n\r\n  const updateState = (jsonData) => {\r\n    setIsLoading(false);\r\n    setData(jsonData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"/\" + visualizationType)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setCurrentTime(data.data);\r\n      });\r\n  }, [visualizationType]);\r\n\r\n  const Cell = ({ columnIndex, rowIndex, style }) => (\r\n    <div\r\n      className={\r\n        columnIndex % 2\r\n          ? rowIndex % 2 === 0\r\n            ? \"GridItemOdd\"\r\n            : \"GridItemEven\"\r\n          : rowIndex % 2\r\n          ? \"GridItemOdd\"\r\n          : \"GridItemEven\"\r\n      }\r\n      style={style}\r\n    >\r\n      <Box colorCode={currentTime[rowIndex][columnIndex]} />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={\"spaceFilling \" + theme}>\r\n      {currentTime && (\r\n        <Grid\r\n          className=\"Grid\"\r\n          columnCount={currentTime[0].length}\r\n          columnWidth={\r\n            window.innerWidth / currentTime[0].length > 50\r\n              ? window.innerWidth / currentTime[0].length\r\n              : 50\r\n          }\r\n          height={window.innerHeight - 40}\r\n          rowCount={currentTime.length}\r\n          rowHeight={\r\n            window.innerWidth / currentTime[0].length > 50\r\n              ? window.innerWidth / currentTime[0].length\r\n              : 50\r\n          }\r\n          width={window.innerWidth}\r\n        >\r\n          {Cell}\r\n        </Grid>\r\n      )}\r\n      {!currentTime && (\r\n        <div>\r\n          <h3>loading...</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Visualization;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./MainUI.css\";\r\nimport Navbar from \"../../Components/Navbar/Navbar\";\r\nimport Visualization from \"../../Components/Visualization/Visualization\";\r\n\r\nimport { ThemeProvider } from \"../../Store/ThemeProvider\";\r\nimport { VisualizationTypeProvider } from \"../../Store/VisualizationTypeProvider\";\r\nfunction App() {\r\n  return (\r\n    <VisualizationTypeProvider>\r\n      <ThemeProvider>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <Visualization />\r\n        </div>\r\n      </ThemeProvider>\r\n    </VisualizationTypeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction UploadFile() {\r\n  const [file, setFile] = useState(null);\r\n  const onChangeFile = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n  const history = useHistory();\r\n  const uploadFile = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"file\", file);\r\n\r\n    axios\r\n      .post(\"/api/upload\", formData)\r\n      .then((res) => console.log(res))\r\n      .catch((err) => console.warn(err));\r\n\r\n    history.push(\"/Main\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" name=\"file\" onChange={onChangeFile} />\r\n      <button onClick={uploadFile}>Upload</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadFile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport MainUI from \"./Pages/MainUI/MainUI\";\r\nimport UploadFile from \"./Pages/UploadFile/UploadFile\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={UploadFile} />\r\n        <Route path=\"/main\" component={MainUI} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}