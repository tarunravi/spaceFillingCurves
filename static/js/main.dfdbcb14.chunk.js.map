{"version":3,"sources":["Components/box/Box.js","App.js","reportWebVitals.js","index.js"],"names":["Box","color","height","console","log","window","innerHeight","mystyle","backgroundColor","flex","width","zIndex","className","style","App","useState","currentTime","setCurrentTime","useEffect","fetch","then","res","json","data","map","row","element","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAqBeA,MAjBf,YAA+B,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,OACnBC,QAAQC,IAAIC,OAAOC,aAEnB,IAAMC,EAAU,CACdC,gBAAiBP,EACjBQ,KAAM,EACNC,MAAO,OACPR,OAAQA,EAAO,KACfS,OAAQ,KAIV,OACE,qBAAKC,UAAU,MAAMC,MAAON,KCSjBO,MAtBf,WACE,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAQA,OANAC,qBAAU,WACRC,MAAM,YAAYC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAC7CN,EAAeM,EAAKA,WAErB,IAGD,sBAAKX,UAAU,MAAf,UAEII,GAAeA,EAAYQ,KAAI,SAAAC,GAAG,OAChC,qBAAKb,UAAU,MAAf,SAAsBa,EAAID,KAAI,SAAAE,GAAO,OAAI,cAAC,EAAD,CAAKzB,MAAOyB,EAASxB,OAAQG,OAAOC,YAAYU,EAAYW,iBAIxGX,GAAgBb,QAAQC,IAAIY,OCTpBY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dfdbcb14.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Box.css\";\r\n\r\n\r\nfunction Box({color, height}) {\r\n  console.log(window.innerHeight)\r\n  \r\n  const mystyle = {\r\n    backgroundColor: color,\r\n    flex: 1,\r\n    width: \"100%\",\r\n    height: height+\"px\",\r\n    zIndex: \"1\",\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"box\" style={mystyle}/>\r\n  );\r\n}\r\n\r\nexport default Box;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Box from \"./Components/box/Box\";\n\nfunction App() {\n  const [currentTime, setCurrentTime] = useState(0);\n\n  useEffect(() => {\n    fetch('/hilbert').then(res => res.json()).then(data => {\n      setCurrentTime(data.data);\n    })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      {\n        currentTime && currentTime.map(row => (\n          <div className=\"row\">{row.map(element => <Box color={element} height={window.innerHeight/currentTime.length}/>)}</div>\n          )\n        )\n      }  \n      {currentTime &&  console.log(currentTime)}      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}