{"version":3,"sources":["Components/box/Box.js","Store/ThemeProvider.js","Components/Navbar/Navbar.js","Store/VisualizationTypeProvider.js","App.js","reportWebVitals.js","index.js"],"names":["Box","color","height","console","log","window","innerHeight","mystyle","backgroundColor","flex","width","zIndex","className","style","ThemeContext","createContext","ThemeProvider","props","useState","theme","setTheme","Provider","value","children","Navbar","useContext","onClick","VisualizationContext","VisualizationTypeProvider","visualizationType","setVisualizationType","App","currentTime","setCurrentTime","useEffect","fetch","then","res","json","data","map","row","element","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAiBeA,MAdf,YAAiC,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OACpBC,QAAQC,IAAIC,OAAOC,aAEnB,IAAMC,EAAU,CACdC,gBAAiBP,EACjBQ,KAAM,EACNC,MAAO,OACPR,OAAQA,EAAS,KACjBS,OAAQ,KAGV,OAAO,qBAAKC,UAAU,MAAMC,MAAON,K,OCZxBO,G,MAAeC,2BAEfC,EAAgB,SAACC,GAC5B,MAA0BC,mBAAS,SAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,OACE,cAACN,EAAaO,SAAd,CAAuBC,MAAO,CAACH,EAAOC,GAAtC,SACGH,EAAMM,YC+BEC,MApCf,YAAmC,EAAjBvB,MAAiB,EAAVC,OAAW,IAAD,EACjC,EAA0BuB,qBAAWX,GAArC,mBAAOK,EAAP,KAAcC,EAAd,KAEA,OACE,sBAAKR,UAAW,UAAYO,EAAQ,MAApC,UACE,qBAAIP,UAAW,aAAeO,EAAQ,YAAtC,UACE,sBAAMP,UAAU,OAAhB,2BADF,yBAIA,sBAAKA,UAAU,UAAf,UACE,oBACEc,QAAS,SAACP,GAAD,OAAWC,EAAS,SAC7BR,UAAW,cAAgBO,EAAQ,OAFrC,oBAOA,oBACEO,QAAS,SAACP,GAAD,OAAWC,EAAS,UAC7BR,UAAW,cAAgBO,EAAQ,OAFrC,qBAOA,wBACEP,UAAU,eADZ,0BAEaO,mBAFb,yBAGW,kBAAMC,EAAmB,UAAVD,EAAoB,OAAS,YAHvD,yBAKE,qBAAKP,UAAWO,2BALlB,WC1BKQ,EAAuBZ,0BAEvBa,EAA4B,SAACX,GACxC,MAAkDC,mBAAS,UAA3D,mBAAOW,EAAP,KAA0BC,EAA1B,KAEA,OACE,cAACH,EAAqBN,SAAtB,CACEC,MAAO,CAACO,EAAmBC,GAD7B,SAGGb,EAAMM,YC+BEQ,MApCf,WACE,MAAsCb,mBAAS,GAA/C,mBAAOc,EAAP,KAAoBC,EAApB,KAUA,OARAC,qBAAU,WACRC,MAAM,YACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLN,EAAeM,EAAKA,WAEvB,IAGD,cAAC,EAAD,UACE,cAAC,EAAD,UACE,sBAAK3B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,eAAf,UACGoB,GACCA,EAAYQ,KAAI,SAACC,GAAD,OACd,qBAAK7B,UAAU,MAAf,SACG6B,EAAID,KAAI,SAACE,GAAD,OACP,cAAC,EAAD,CACEzC,MAAOyC,EACPxC,QAASG,OAAOC,YAAc,IAAM0B,EAAYW,iBAKzDX,GAAe7B,QAAQC,IAAI4B,cCtBzBY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.131c0727.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Box.css\";\r\n\r\nfunction Box({ color, height }) {\r\n  console.log(window.innerHeight);\r\n\r\n  const mystyle = {\r\n    backgroundColor: color,\r\n    flex: 1,\r\n    width: \"100%\",\r\n    height: height + \"px\",\r\n    zIndex: \"1\",\r\n  };\r\n\r\n  return <div className=\"box\" style={mystyle} />;\r\n}\r\n\r\nexport default Box;\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = (props) => {\r\n  const [theme, setTheme] = useState(\"light\");\r\n\r\n  return (\r\n    <ThemeContext.Provider value={[theme, setTheme]}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { ThemeContext } from \"../../Store/ThemeProvider\";\r\n\r\nfunction Navbar({ color, height }) {\r\n  const [theme, setTheme] = useContext(ThemeContext);\r\n\r\n  return (\r\n    <nav className={\"Navbar \" + theme + \"Bar\"}>\r\n      <h1 className={\"titleText \" + theme + \"TitleText\"}>\r\n        <span className=\"bold\">Tarun Ravi's </span>Space Filling Curve\r\n      </h1>\r\n\r\n      <div className=\"buttons\">\r\n        <h1\r\n          onClick={(theme) => setTheme(\"dark\")}\r\n          className={\"buttonText \" + theme + \"Text\"}\r\n        >\r\n          Linear\r\n        </h1>\r\n\r\n        <h1\r\n          onClick={(theme) => setTheme(\"light\")}\r\n          className={\"buttonText \" + theme + \"Text\"}\r\n        >\r\n          Hilbert\r\n        </h1>\r\n\r\n        <div\r\n          className=\"themeSwitch\"\r\n          className={theme + \"Switch\" + \" switch\"}\r\n          onClick={() => setTheme(theme === \"light\" ? \"dark\" : \"light\")}\r\n        >\r\n          <div className={theme + \"Circle\" + \" switchCircle\"}></div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const VisualizationContext = createContext();\r\n\r\nexport const VisualizationTypeProvider = (props) => {\r\n  const [visualizationType, setVisualizationType] = useState(\"linear\");\r\n\r\n  return (\r\n    <VisualizationContext.Provider\r\n      value={[visualizationType, setVisualizationType]}\r\n    >\r\n      {props.children}\r\n    </VisualizationContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Box from \"./Components/box/Box\";\r\nimport Navbar from \"./Components/Navbar/Navbar\";\r\nimport { ThemeProvider } from \"./Store/ThemeProvider\";\r\nimport { VisualizationTypeProvider } from \"./Store/VisualizationTypeProvider\";\r\nfunction App() {\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/hilbert\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setCurrentTime(data.data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <VisualizationTypeProvider>\r\n      <ThemeProvider>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <div className=\"spaceFilling\">\r\n            {currentTime &&\r\n              currentTime.map((row) => (\r\n                <div className=\"row\">\r\n                  {row.map((element) => (\r\n                    <Box\r\n                      color={element}\r\n                      height={(window.innerHeight - 40) / currentTime.length}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              ))}\r\n            {currentTime && console.log(currentTime)}\r\n          </div>\r\n        </div>\r\n      </ThemeProvider>\r\n    </VisualizationTypeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}